#include <ESP8266WiFi.h>
#include <ThingSpeak.h>

// Pin definitions
const int irSensorPin = 2;  // IR sensor digital pin
const int ledPin = 9;       // PWM pin for LED
const int ldrPin = A0;      // Analog pin for LDR

// Wi-Fi credentials
const char* ssid = "******";  //  Wi-Fi SSID
const char* password = "******";  // Wi-Fi password

// ThingSpeak credentials
unsigned long myChannelNumber = ******;  // ThingSpeak channel number
const char* myWriteAPIKey = "******";  //  ThingSpeak Write API Key

int irSensorValue = 0;
int ldrValue = 0;
int ledBrightness = 0;

// Initialize Wi-Fi client
WiFiClient client;

void setup() {
  pinMode(irSensorPin, INPUT);
  pinMode(ledPin, OUTPUT);
  Serial.begin(9600);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
  ThingSpeak.begin(client);
}

void loop() {
  ldrValue = analogRead(ldrPin);
  irSensorValue = digitalRead(irSensorPin);

  // Check if it is day or night
  if (ldrValue > 500) { // Adjust the threshold based on your setup
    // Daytime
    ledBrightness = 0;
  } else {
    // Nighttime
    if (irSensorValue == HIGH) {
      // Vehicle detected
      ledBrightness = 255;  // 100% brightness
    } else {
      // No vehicle
      ledBrightness = 128;  // 50% brightness
    }
  }

  analogWrite(ledPin, ledBrightness);

  // Prepare data for ThingSpeak
  ThingSpeak.setField(1, ledBrightness);
  ThingSpeak.setField(2, calculatePowerUsage(ledBrightness));

  // Write data to ThingSpeak
  int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);
  if (x == 200) {
    Serial.println("Channel update successful.");
  } else {
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }

  delay(15000); // ThingSpeak allows updates every 15 seconds
}

float calculatePowerUsage(int brightness) {
  // Example calculation for power usage
  // Adjust according to your LED power rating and usage time
  #define LED_POWER_RATING 10 // LED power rating in watts
  #define ON_TIME_PER_MONTH 720000 // Total on time per month in seconds (e.g., 200 hours)

  float powerUsage = (brightness / 255.0) * LED_POWER_RATING * (ON_TIME_PER_MONTH / 3600.0);
  return powerUsage;
}


